	.title	http11
	.ident	/X00.50/
	.mcall	crrg$s,craw$s,sref$s,qiow$s,qio$s
	.mcall	astx$s,dsar$s,enar$s,srda$s,rcvd$s
	.mcall	spnd$s,alun$s,map$s
	.mcall	rdbbk$,wdbbk$
	.mcall	ordie,die,dielun
	.mcall	ctxini,ctxuse,ctx2st

port	=	1337.

tilun	=	1
tclun	=	2
tcefn	=	1
tiefn	=	2
conefn	=	2

clinum	=	20
quesiz	=	20
blun	=	4

sopt	=	21
tmout	=	30.

	.macro	deferr	code,desc
	.save
	.psect	errors,d,ro
hdr'code:
	.ascii	|HTTP/1.1 code desc|<15><12>
	.ascii	|Content-Length: 3|
hdl'code=	. - hdr'code
msg'code:
	.ascii	|code|
msl'code=	. - msg'code

	.psect	errcod,i,ro
rsp'code::
	mov	r1,r4
	add	#cl.sta,r4
	qio$s	#io.wlb,cl.lun(r1),#conefn,,r4,#rspast,<#hdr'code,#hdl'code>
	orclos
	qio$s	#io.wlb,cl.lun(r1),#conefn,,r4,#rspast,<#hdrend,#hdlend>
	orclos
	qio$s	#io.wlb,cl.lun(r1),#conefn,,r4,#rspdon,<#msg'code,#msl'code>
	orclos
	astx$s
	.restore

	.macro	or'code	cli,iosb,?ok
	bcc	ok
	.if nb iosb
	tstb	iosb
	bpl	ok
	.endc
	.if nb cli
	mov	cli,r1
	.endc
	jmp	rsp'code
ok:
	.endm
	.endm

	.macro	orclos	cli,iosb,?ok
	bcc	ok
	.if nb iosb
	tstb	iosb
	bpl	ok
	.endc
	.if nb cli
	mov	cli,r1
	.endc
	jmp	close
ok:
	.endm

	deferr	400,<Bad Request>
	deferr	404,<Not Found>
	deferr	500,<Internal Server Error>
	deferr	503,<Service Unavailable>

	.asect
cl.nxt:	.blkw	1
cl.rid:	.blkw	1
cl.lun:	.blkw	1
cl.sta:	.blkw	2
cl.req:	.blkb	256.
cl.rsz	=	. - cl.req
cl.siz	=	.

	.psect	dir,d,rw
regsiz	=	200
rdb::	rdbbk$	regsiz,,,rs.att!rs.red!rs.wrt,170000
rdbsiz	=	. - rdb
wdb::	wdbbk$	7,regsiz,0,0,,ws.wrt

	.psect	regdef,d,rw
clirdb::.blkb	rdbsiz * clinum

	.psect	clidef,d,rw
topcli::.word	0
client::.blkb	cl.siz * clinum

	.psect	tmp,d,rw
rspbuf:	.blkw	15.
tmpbuf:	.blkw	100
tmpbl	=	. - tmpbuf
reqbuf:	.blkw	100
reqbl	=	. - reqbuf
iosb:	.blkw	2

	.psect	handlr,d,rw
rcvtsk:	.rad50	/HWROUT/
hndtbl:	.word	0
	.rad50	/ABOUT/
	.rad50	/ABO/
	.rad50	/ABOUT/
	.rad50	/HEL/
	.rad50	/HWROUT/
	.rad50	/BYE/
hndend:	.rad50	/BYROUT/

	.psect	const,d,ro
reqget:	.asciz	|GET|
hdr200:	.ascii	|HTTP/1.1 200 OK|<15><12>
	.ascii	|Content-Type: text/html; charset=utf-8|<15><12>
	.ascii	|Content-Length: |
hdl200	=	. - hdr200
hdrend:	.ascii	<15><12>|Server: HTTP/11 X00.50|<15><12>
	.ascii	|Connection: close|<15><12>
	.ascii	<15><12>
hdlend	=	. - hdrend

	.psect	code,i,ro
start::	alun$s	#tilun,#"TI
	dielun	#tilun
	call	inicli
	crrg$s	#rdb
	ordie	<Cannot create region>
	craw$s	#wdb
	ordie	<Cannot create window>
	srda$s	#rsprdy
	ordie	<Cannot set receive AST>

	alun$s	#tclun,#"TC
	ordie	<Cannot assign listening LUN>
	dsar$s

	qiow$s	#io.cep,#tclun,#tcefn,,#iosb,,<#port>
	ordie	<Cannot create endpoint>,iosb
	qiow$s	#io.ras,#tclun,#tcefn,,#iosb,,<#conrdy>
	ordie	<Cannot regiser AST>,iosb
	qiow$s	#io.lsn,#tclun,#tcefn,,#iosb,,<,#clinum.>
	ordie	<Cannot listen>,iosb

	enar$s
1$:	spnd$s
	br	1$

inicli::mov	#clinum,r1
	mov	#client,r0
	mov	#blun,r2
	mov	#clirdb,r3
1$:	mov	r2,cl.lun(r0)
	alun$s	r2,#"TC
	bcs	lunerr
	mov	r3,cl.rid(r0)
	mov	topcli,cl.nxt(r0)
	mov	r0,topcli
	mov	#rdbsiz,r5
	mov	#rdb,r4
2$:	movb	(r4)+,(r3)+
	sob	r5,2$
	add	#cl.siz,r0
	inc	r2
	sob	r1,1$
	mov	#clirdb,r0
	mov	#clinum,r1
3$:	crrg$s	r0
	bcs	regerr
	add	#rdbsiz,r0
	sob	r1,3$
	return
regerr:	die	<Cannot create region>
lunerr:	die	<Cannot assign LUN>
	
getcli::mov	topcli,r1
	beq	1$
	mov	cl.nxt(r1),topcli
1$:	return

relcli::mov	topcli,cl.nxt(r1)
	mov	r1,topcli
	return

mapcli::mov	r1,r2
	add	#cl.rid,r2
	mov	@r2,r2
	mov	r.gid(r2),wdb+w.nrid
	map$s	#wdb
	orclos
	return

conrdy::tst	(sp)+
	call	getcli
	tst	r1
	bne	1$
	jmp	rsp503
1$:	qiow$s	#io.ast,#tclun,#tcefn
	qiow$s	#io.cep,cl.lun(r1),#conefn,,#iosb,,<#port>
	orclos	,iosb
	qiow$s	#io.acc,cl.lun(r1),#conefn,,#iosb,,<0,#sopt,#tmout>
	orclos	,iosb
	mov	r1,r2
	add	#cl.sta,r2
	mov	r1,r3
	add	#cl.req,r3
	qio$s	#io.rlb,cl.lun(r1),#conefn,,r2,#reqrdy,<r3,#cl.rsz>
	orclos
	astx$s

reqrdy::mov	(sp)+,r1
	mov	r1,r2
	sub	#cl.sta,r1
	orclos	r1,r2
	mov	r1,r3
	add	#cl.req,r1
	mov	#reqget,r0
	mov	#' ,r2
	call	tokcmp
	bcc	1$
2$:	mov	r3,r1
	jmp	rsp400
1$:	cmpb	#'/,(r1)+
	bne	2$
	mov	r1,r0
	mov	r3,r1
	call	fndhnd
	bcc	3$
	jmp	rsp404
3$:	call	mapcli
	ctxini	wdb+w.nbas,r1
	sref$s	r0,#wdb,#1
	or503
	astx$s

nocli::	die	<No client available>

rsprdy::rcvd$s	,#rspbuf
	bcc	1$
	cmp	#ie.its,$dsw
	bne	2$	
	astx$s
2$:	jmp	rcverr	
1$:	mov	rspbuf+4,r1
	call	mapcli
	mov	r1,r4
	add	#cl.sta,r4
	ctxuse	wdb+w.nbas
	qio$s	#io.wlb,cl.lun(r1),#conefn,,r4,#rspast,<#hdr200,#hdl200>
	orclos
	mov	r1,r3
	ctx2st
	mov	#tmpbuf,r0
	clr	r2
	call	$cbdmg
	sub	#tmpbuf,r0
	qio$s	#io.wlb,cl.lun(r3),#conefn,,r4,#rspast,<#tmpbuf,r0>
	orclos
	qio$s	#io.wlb,cl.lun(r3),#conefn,,r4,#rspast,<#hdrend,#hdlend>
	orclos
	ctx2st
	qio$s	#io.wlb,cl.lun(r3),#conefn,,r4,#rspdon,<r0,r1>
	orclos
	jmp	rsprdy

rspdon::mov	(sp)+,r1
	mov	r1,r2
	sub	#cl.sta,r1
	orclos	r1,r2
	jmp	close
rcverr:	die	<Cannot receive data>

close::	qiow$s	#io.cln,cl.lun(r1),#conefn
	call	relcli
	astx$s

rspast::mov	(sp)+,r1
	mov	r1,r2
	sub	#cl.sta,r1
	orclos	r1,r2
	astx$s

tokcmp::tstb	@r0
	beq	patend
	cmpb	(r0)+,(r1)+
	beq	tokcmp
neq:	sec
	return
patend:	cmpb	r2,@r1
	bne	neq
	inc	r1
	clc
	return

fndhnd::jsr	r2,$savvr
	clr	r1
	call	$cat5
	bcc	4$
	cmpb	#' ,r2
	bne	3$
4$:	mov	#hndtbl,r0
1$:	cmp	(r0)+,r1
	beq	2$
	cmp	r0,#hndend
	bge	3$
	cmp	(r0)+,(r0)+
	br	1$
2$:	mov	r0,2(sp)
	clc
	return
3$:	sec
	return

	.end	start
